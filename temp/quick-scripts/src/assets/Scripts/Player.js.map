{"version":3,"sources":["assets/Scripts/Player.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport class Player extends cc.Component {\n    @property(cc.Node)\n    endPopupNode: cc.Node = null;\n\n    @property(cc.AudioSource)\n    loser: cc.AudioSource = null;\n    \n    private idleTimer: number = 0;\n    private isOnPlatform: boolean = false;\n\n    walkOnStick(stickNode: cc.Node, totalStickHeight: number) {\n        const stickWorldPos = stickNode.parent.convertToWorldSpaceAR(stickNode.position);\n        const targetX = stickWorldPos.x + totalStickHeight;\n        const targetY = 288;\n        const newX = targetX - totalStickHeight / 1.06;\n        const targetPosition = this.node.parent.convertToNodeSpaceAR(cc.v2(newX, targetY));\n\n        const moveAction = cc.sequence(\n            cc.moveTo(1, targetPosition).easing(cc.easeCubicActionOut()),\n            cc.callFunc(() => {\n                this.idleTimer = 0.2;\n            }),\n            cc.delayTime(1),\n            cc.callFunc(() => {\n                if (!this.isOnPlatform) {\n                    this.node.setPosition(cc.v2(128, 0));\n                    this.endPopupNode.active = true;\n                }\n                else \n                    this.node.runAction(cc.moveTo(1, cc.v2(128, 288)).easing(cc.easeCubicActionOut()));\n            })\n        );\n        this.node.runAction(moveAction);\n    }\n    End_Popup() {\n        if (this.endPopupNode.active = true){\n            cc.game.end();\n            this.loser.play();\n        }\n    }\n    onCollisionEnter(other: cc.Collider, self: cc.Collider) {\n        if (other.node.name === 'Platform' ) {\n            this.isOnPlatform = true;\n        }\n    }\n    onCollisionExit(other: cc.Collider, self: cc.Collider) {\n        if (other.node.name === 'Platform') {\n            this.isOnPlatform = false;\n        }\n    }\n}\n\n/*to backup*/\n// const { ccclass, property } = cc._decorator;\n\n// @ccclass\n// export class Player extends cc.Component {\n//     private idleTimer: number = 0;\n//     private isOnPlatform: boolean = false;\n\n//     walkOnStick(stickNode: cc.Node, totalStickHeight: number) {\n//         const stickWorldPos = stickNode.parent.convertToWorldSpaceAR(stickNode.position);\n//         const targetX = stickWorldPos.x + totalStickHeight;\n//         const targetY = 288;\n//         const newX = targetX - totalStickHeight / 1.06;\n//         const targetPosition = this.node.parent.convertToNodeSpaceAR(cc.v2(newX, targetY));\n\n//         const moveAction = cc.sequence(\n//             cc.moveTo(1, targetPosition).easing(cc.easeCubicActionOut()),\n//             cc.callFunc(() => {\n//                 this.idleTimer = 0;\n//             }),\n//             cc.delayTime(1),\n//             cc.callFunc(() => {\n//                 if (!this.isOnPlatform) {\n//                     this.node.setPosition(cc.v2(128, 0));\n//                 }\n//             })\n//         );\n\n//         this.node.runAction(moveAction);\n//     }\n// }\n\n\n\n\n\n"]}